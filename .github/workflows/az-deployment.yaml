name: Deploy Ecom Web to Azure Cloud
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - .github/workflows/az-deployment.yaml
      - 'terraformaz/**'

permissions:
  id-token: write
  contents: read

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  EKS_CLUSTER: ${{ vars.EKS_CLUSTER }}
  DOCKER_IMAGE_NAME: warmmike/ecom-web
#  TF_LOG: DEBUG

jobs:
  build:
    name: Container Build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'  

    steps:
        - name: Checkout source code
          uses: actions/checkout@v4
  
        - name: login to docker registry
          uses: docker/login-action@v3
          with:
            username: ${{secrets.DOCKERHUB_USERNAME}}
            password: ${{secrets.DOCKERHUB_TOKEN}}
  
        - name: build and push docker image to registry
          uses: docker/build-push-action@v5
          with:
            context: .
            push: true
            tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ github.run_number }}

  deploy:
    needs: [build]
    name: Terraform Azure Cloud Deployment
    runs-on: ubuntu-latest
    if: github.event_name == 'push'  

    defaults:
      run:
        shell: bash
    
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform init
        id: init
        working-directory: ./terraformaz
        run: terraform init

      - name: Terraform validate
        id: validate
        working-directory: ./terraformaz
        run: terraform validate

      - name: Terraform plan
        id: plan
        working-directory: ./terraformaz
        run: terraform plan -no-color -input=false -out planfile
        continue-on-error: true

      - name: Terraform plan status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform apply
        id: apply
        working-directory: ./terraformaz
        run: terraform apply -auto-approve -input=false -parallelism=1 planfile

      # - name: Azure CLI Login
      #   uses: azure/login@v2
      #   with:
      #     client-id: ${{ secrets.AZURE_CLIENT_ID }}
      #     tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Azure login
        id: login
        uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: '${{ secrets.resource_group }}' 
          cluster-name: '${{ secrets.cluster_name }}'

      - name: Setup kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3

      - name: Setup helm
        uses: azure/setup-helm@v4.3.0

      # - name: Add Repo Metrics Server
      #   run: helm repo add metrics-server https://kubernetes-sigs.github.io/metrics-server/

      # - name: Install Metrics Server
      #   run: helm upgrade --install metrics-server metrics-server/metrics-server

      - name: Install Application
        run: helm install ecomweb helm/ecomwebcharts --set appimage=${{ env.DOCKER_IMAGE_NAME }} --set apptag=${{ github.run_number }}

  destroy:
    name: Destroy Azure Cloud Deployment
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    defaults:
        run:
          shell: bash
          working-directory: ./terraformaz

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
    
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
    
      - name: Terraform Init
        id: init
        run: terraform init
    
      - name: Terraform destroy
        id: destroy
        run: terraform destroy -auto-approve -input=false
